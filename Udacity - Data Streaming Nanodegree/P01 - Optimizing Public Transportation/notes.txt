# postgres

pg_lsclusters
sudo pg_ctlcluster 10 main start
su - postgres 
root ==> su - postgres
==? psql
service postgresql status
service postgresql start
service postgresql status
psql


CREATE ROLE matar LOGIN SUPERUSER PASSWORD 'xxxxx';
CREATE DATABASE cta OWNER =  matar;

psql -d cta -U matar

psql -U matar -d cta -f ~/Desktop/Optimizing_Public_Transportation/load_stations.sql
select * from stations;

=====================================================================================================================================================

# start Kafka services

cd ~/confluent-5.4.1/

./bin/zookeeper-server-start ./etc/kafka/zookeeper.properties
./bin/kafka-server-start ./etc/kafka/server.properties
./bin/schema-registry-start ./etc/schema-registry/schema-registry.properties
./bin/kafka-rest-start etc/kafka-rest/kafka-rest.properties
./bin/connect-standalone ./etc/schema-registry/connect-avro-standalone.properties ./etc/kafka-connect-jdbc/source-quickstart-sqlite.properties
./bin/ksql-server-start ./etc/ksql/ksql-server.properties


./bin/kafka-topics --list --bootstrap-server localhost:9092
./bin/kafka-console-consumer --bootstrap-server localhost:9092 --topic faust-withdrawals-v5-user_to_total-changelog --from-beginning
./bin/kafka-console-consumer --bootstrap-server localhost:9092 --topic udacity.cta.connect.stations --from-beginning


./bin/connect-standalone ./etc/kafka/connect-standalone.properties
./bin/kafka-topics --zookeeper localhost:2181 --delete --topic udacity.cta.connect-stations


# start Kafka Connect ----------------

./bin/connect-standalone ./etc/schema-registry/connect-avro-standalone.properties ./etc/kafka-connect-jdbc/source-quickstart-sqlite.properties

curl http://localhost:8083/connector-plugins | python -m json.tool

curl http://localhost:8083/connectors | python -m json.tool

curl http://localhost:8083/connectors/test-source-sqlite-jdbc-autoincrement | python -m json.tool

curl http://localhost:8083/connectors/stations | python -m json.tool

curl http://localhost:8083/connectors/stations/status | python -m json.tool


=====================================================================================================================================================
# run order 

producer :
python simulation.py

consumer :
faust -A faust_stream worker -l info
python ksql.py
python server.py

=====================================================================================================================================================
# topics names

udacity.cta.stations
udacity.cta.turnstiles
udacity.cta.weather
udacity.cta.connect.stations
udacity.cta.faust.stations.table


=====================================================================================================================================================
# CSS and JS 
https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css


https://code.jquery.com/jquery-3.3.1.slim.min.js

https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js


https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js
